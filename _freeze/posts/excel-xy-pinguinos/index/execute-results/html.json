{
  "hash": "aebd028b34a661ae54daaf09258e29e9",
  "result": {
    "markdown": "---\ntitle: \"Gráficos de dispersión multiserie en Microsoft Excel (parte 2)\"\nsubtitle: \"Uso del modelo de datos de Power Pivot y de las fórmulas DAX\"\nauthor: \"Juan Riera\"\ndate: 2023-02-02\nformat: html\nimage: \"pinguinos2.png\"\nexecute: \n  freeze: TRUE\n---\n\n\nEn el post anterior hemos visto cómo crear un gráfico de dispersión multiserie a partir de una tabla de datos arreglados, en la que una columna proporciona los criterios para la agrupación en clases; para conseguir diferenciar los puntos individuales construíamos dos nuevas columnas en la misma tabla de datos original.\n\nExcel proporciona otro método para añadir columnas modificadas, que parte del [modelo de datos](https://support.microsoft.com/en-us/office/data-models-in-excel-services-c6fec347-5203-4c03-bc35-00910fc10099) incorporado en la hoja de cálculo a partir de la versión 2013.y que se ha refinado y consolidado a partir de la introducción de [Power BI](https://en.wikipedia.org/wiki/Microsoft_Power_BI) y de Excel 2016.\n\n## El modelo de datos de Microsoft Excel y Power BI, y los lenguajes M y DAX.\n\nLa introducción de Power Pivot y, posteriormente, de Power BI, ha llevado anexa la introducción de dos nuevos **y diferentes** lenguajes de programación para estos entornos, de uso específico en cada herramienta. Estos lenguajes son **M** y **DAX**. Para entender sus diferencias es necesario entender las bases del modelo de datos de Microsoft.\n\nCon el desarrollo de la ciencia de datos en el último decenio, se pusieron de manifiesto nuevas necesidades de consolidación grandes volúmenes de datos de fuentes muy heterogéneas. Esto necesitó el desarrollo de una herramienta diferente de Excel, ya que la utilidad de query original de Microsoft (Microsoft Query) había quedado completamente obsoleta. Esta nueva herramienta fue denominada **Power Pivot**, y está orientada a la consulta, consolidación, limpieza y reelaboración de las tablas de datos; es capaz de interrogar hojas de cálculo, bases de datos, páginas web e incluso páginas de texto o documentos en formatos WORD o PDF, entre otrosutilizando un nuevo lenguaje desarrollado por Microsoft para **PowePivot**, el lenguage **M**.\n\nMicrosoft ha desarrollado también una herramienta de análisis y presentación de la información, Power BI, que utiliza los datos consolidados por Power Pivot. Power BI se desarrolló junto con un nuevo lenguaje de programación llamado **DAX**(Data Analysis Expressions), orientado a la creación de nuevas dimensiones (columnas) o nuevas medidas que faciliten el análisis de las tablas de datos consolidadas.\n\nUn esquema muy sencillo de las diferencias entre M y DAX es éste:\n\n![[Fuente de la imagen](https://powerpartners.pro/en/power-query-vs-dax/)](DAX-vs-M-2048x1366.png)\n\nEn nuestro ejemplo, vamos a utilizar una función DAX sencilla para calcular las nuevas columnas que necesitamos en nuestro gráfico.\n\n## Preparación de los datos\n\nUtilizaré en este ejemplo el [dataset `palmerpenguins`](https://allisonhorst.github.io/palmerpenguins/), preparado por [Allison Horst](https://allisonhorst.github.io/) en GitHub. Lo he guardado como `CSV` desde R, mediante la función básica `write.csv2()`, que genera el `CSV` con el formato español (punto y coma `;` como separador de columnas, coma `,` como separador de decimales), para que se pueda recuperar en Excel en español sin problema. En la exportación, he evitado números de filas, y he reemplazando los `N/A` de R por blancos, que en Excel serán celdas vacías.\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\nwrite.csv2(penguins, \"pinguinos.csv\", row.names = FALSE, na=\"\")\n\nknitr::kable(head(penguins)) # para mostrar el encabezado de la tabla\n```\n\n::: {.cell-output-display}\n|species |island    | bill_length_mm| bill_depth_mm| flipper_length_mm| body_mass_g|sex    | year|\n|:-------|:---------|--------------:|-------------:|-----------------:|-----------:|:------|----:|\n|Adelie  |Torgersen |           39.1|          18.7|               181|        3750|male   | 2007|\n|Adelie  |Torgersen |           39.5|          17.4|               186|        3800|female | 2007|\n|Adelie  |Torgersen |           40.3|          18.0|               195|        3250|female | 2007|\n|Adelie  |Torgersen |             NA|            NA|                NA|          NA|NA     | 2007|\n|Adelie  |Torgersen |           36.7|          19.3|               193|        3450|female | 2007|\n|Adelie  |Torgersen |           39.3|          20.6|               190|        3650|male   | 2007|\n:::\n:::\n\n\nque en Excel será\n\n![](2023-02-05_head_tabla.png)\n\n## Cómo hacer un gráfico de dispersión desde el complemento `Power Pivot`de Excel\n\nQueremos hacer un gráfico de dispersión de los datos de `flipper_length_cm` (longitud de la aleta en cm) frente a `bill_length_cm` (longitud del pico en cm), agrupado por `species`.\n\nPara utilizar **Power Pivot** debemos verificar si el complemento está activo en Excel. Si lo está, nos aparecerá en el menú principal.\n\n![](excel-com-3.png)\n\nSi no está activo, tenemos que activarlo en el `Menú`\\>`Opciones`\\>`Complementos`, y en la parte inferior, en `Administrar:`, seleccionaremos `Complementos COM`\\>`Ir` ([ver indicaciones de Soporte Microsoft](https://support.microsoft.com/es-es/office/iniciar-el-complemento-power-pivot-para-excel-a891a66d-36e3-43fc-81e8-fc4798f39ea8))\n\n![](excel-com-1.png)\n\nMarcamos las opciones `Microsoft Power Map for Excel` y `Microsoft Power Pivot for Excel`.\n\n![](excel-com-2.png)\n\nEn el menú principal de Excel debe aparecernos ahora la opción `Power Pivot`.\n\n![](excel-com-3.png)\n\nA continuación, abrimos el dataset `pinguinos.csv` y lo guardamos como Libro Excel `pinguinos.xlsx` (Power Pivot sólo estará activo si la hoja de cálculo tiene este formato).\n\nCon el cursor dentro de nuestra tabla de datos, seleccionamos `Menú`\\> `Power Pivot`\\> `Agregar a modelo de datos`.\n\nEsto tiene tres efectos:\n\n-   convierte nuestro rango de datos al formato de tabla de Excel,\n-   añade la tabla a un nuevo modelo de datos de Power Pivot, y\n-   hace que Excel nos abra la ventana del administrador del modelo de datos de Power Pivot\n\n![](excel-powerpivot-1.png)\n\nExcel mantiene esta tabla en memoria sin alterar nuestra tabla original, como podemos verificar cerrando la ventana (`Archivo`\\> `Cerrar`), si bien, como vimos antes, ha convertido nuestra tabla de datos en una tabla Excel.\n\n![](excel-powerpivot-2.png)\n\nHacemos click en `Administrar`para volver a nuestro modelo de datos. Vamos a crear dos nuevas columnas en el el modelo, que como veremos, no afectarán a la tabla original. Para añadir una columna, dentro de Power Pivot, seleccionamos `Menú`\\>`Diseñar`\\>`Agregar`\n\nLa fórmula que vamos a utilizar a continuación es una fórmula en [enguaje DAX](https://learn.microsoft.com/es-es/dax/dax-overview) equivalente a la que hemos utilizado en nuestra hoja de cálculo anteriormente: `=Tabla1[bill_length_mm]+CALCULATE(RAND()/100)`\n\nSin embargo, el dataset `pinguinos.csv` tiene una diferencia con respecto al dataset `iris`: hay datos que faltan (celdas en blanco). En las columnas que vamos a calcular, debemos prever esta situación para evitar que la fórmula devuelva un valor erróneo.\n\n![](excel-powerpivot-3.png)\n\nEsta es la fórmula corregida: `=IF(ISBLANK(Tabla1[bill_length_mm]);BLANK();Tabla1[bill_depth_mm]+CALCULATE(RAND()/100))` que devuelve un valor en blanco cuando el valor original es un valor en blanco.\n\nUna vez introducidas las fórmulas para las dos nuevas columnas, insertamos una nueva tabla dinámica ***desde Power Pivot*** en una nueva hoja de cálculo. De esta forma, la nueva tabla dinámica toma como tabla de datos el modelo que acabamos de crear.\n\n![](excel-powerpivot-5.png)\n\nConstruimos nuestro gráfico de dispersión a partir de esta tabla dinámica, igual que hemos hecho en el [post anterior](https://juanriera.github.io/blog/posts/excel-xy/), insertando un gráfico de dispersión en blanco e insertando las series manualmente (puedes ver un vídeo demostrativo en [este enlace](https://youtu.be/tD2P5wabb1k)).\n\nEn este gráfico, en vez de introducir una leyenda para las series, vamos a utilizar rótulos del color de las series para mostrar cada serie\n\n![](graf-dispersion-pinguinos-1.png)\n\nTambién insertaremos dos imágenes que proporcionan información adicional sobre los tres grupos de pinguinos y las medidas del pico; recuperamos estas imágenes del [repositorio del dataset `palmerpenguins`](https://allisonhorst.github.io/palmerpenguins/).\n\n::: {#fig-pinguinos layout-ncol=\"2\"}\n![Los grupos de pingüinos](lter_penguins.png){#fig-grupos-pinguinos}\n\n![Medidas del pico](culmen_depth.png){#fig-pico-pinguinos}\n\nGraficos explicativos que insertaremos en nuestro gráfico de dispersión\n:::\n\nEsta esla primera versión del gráfico con las imágenes insertadas:\n\n![Comparación de la longitud de la aleta vs la longitud del pico en el dataset [*Palmer Penguins*](https://allisonhorst.github.io/palmerpenguins/)](pinguinos.png)\n\nLa posibilidad de edición visual de Excel nos permite modificar y ajustar el gráfico con facilidad, dando más importancia a los elementos gráficos que actúan como leyenda visual.\n\nNuestra versión final del gráfico en Excel queda así:\n\n![Comparación de la longitud de la aleta vs la longitud del pico en el dataset [*Palmer Penguins*](https://allisonhorst.github.io/palmerpenguins/) (v. 2)](pinguinos2.png)\n\nEl gráfico de dispersión nos ha permitido realizar dos funciones:\n\n-   Visualizar la relación entre los valores de dos variables numéricas. En este caso, hemos podido separar los grupos de población de pingüinos en función de dos características anatómicas.\n-   Comunicar de manera eficaz y visualmente atractiva la información analizada.\n\n## Cómo hacerlo en R\n\nEn R, el gráfico de dispersión básico es muy sencillo usando `ggplot`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## librerias\nlibrary(ggplot2)\n\n# establece el tema por defecto, en caso de que se haya modificado\ntheme_set(theme_gray()) \n\n## lee los datos\ndf_penguins <- read.csv2('pinguinos.csv')\n\n## hace el gráfico\nggplot(df_penguins, aes(flipper_length_mm, bill_length_mm, colour = species)) +\n    geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/rpenguins-basic-1.png){width=672}\n:::\n:::\n\n\nPara hacer en R un gráfico equivalente al gráfico final en Excel, más personalizado y con imágenes incrustadas y anotaciones, el código es algo más complejo, como vemos a continuación.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## librerias\nlibrary(tidyverse)\n\ntheme_set(theme_minimal(base_size = 15))\n\n## lee los datos\ndf_penguins <- readr::read_csv2('pinguinos.csv') |>\n  mutate(species = if_else(species == \"Adelie\", \"Adélie\", species))\n\n## lee las imágenes\nimg <- png::readPNG(\"culmen_depth.png\")\ni1 <- grid::rasterGrob(img, interpolate = T)\n\nimg <- png::readPNG(\"lter_penguins.png\")\ni2 <- grid::rasterGrob(img, interpolate = T)\n\nimg <- png::readPNG(\"palmerpenguins.png\")\ni3 <- grid::rasterGrob(img, interpolate = T)\n\n## prepara el gráfico\npaleta_color <- c(\"darkorange\", \"blueviolet\",  \"aquamarine4\")\n\nscat <-\n  ggplot(df_penguins, aes(flipper_length_mm, bill_length_mm, colour = species)) +\n    geom_point(size = 3, alpha = 0.3, stroke = 1) +\n    theme_minimal() +\n    labs (\n      title = \"Flipper and bill length\",\n      subtitle=\"Dimensions for Adélie, Chinstrap and Gentoo penguins at Palmer Station LTER\",\n      caption = \"Dataset and artwork by Allison Horst https://allisonhorst.github.io/palmerpenguins/\"\n    ) +\n    theme(\n      plot.title = element_text(size=22),\n      legend.position = \"none\",\n      plot.margin = margin(1,6.5,1.5,1.5, \"cm\"),\n      plot.caption = element_text(hjust=0),\n    ) +\n  scale_fill_manual(values=paleta_color) +\n  scale_color_manual(values=paleta_color) +\n  annotate(\n    \"text\",\n    x = 185, y = 54,\n    label = \"Chinstrap\",\n    color = \"blueviolet\",\n    alpha = 0.8,\n    size = 4,\n    lineheight = .9\n  ) +\n  annotate(\n    \"text\",\n    x = 205, y = 34,\n    label = \"Adélie\",\n    color = \"darkorange\",\n    alpha = 0.8,\n    size = 4,\n    lineheight = .9\n  ) +\n  annotate(\n    \"text\",\n    x = 223, y = 42,\n    label = \"Gentoo\",\n    color = \"aquamarine4\",\n    alpha = 0.8,\n    size = 4,\n    lineheight = .9\n  ) +\n  annotation_custom(i1, ymin = 43, ymax = 63, xmin = 235, xmax =280) +\n  annotation_custom(i2, ymin = 18, ymax = 55, xmin = 228, xmax =280) +\n  annotation_custom(i3, ymin = 59, ymax = 71, xmin = 153, xmax =166) +\n  coord_cartesian(clip = \"off\")\n\nplot(scat)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/rpenguins-1.png){width=672}\n:::\n:::\n\n\n## Ventajas e inconvenientes de cada herramienta\n\nA continuación he resumido en una tabla comparativa alguna de las ventajas e inconvenientes de cada método.\n\n+--------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n|                    | Excel                                                                                                                                                   | R                                                                                                                                                                                                                                   |\n+====================+=========================================================================================================================================================+=====================================================================================================================================================================================================================================+\n| **Ventajas**       | -   La edición del gráfico se realiza de forma visual, es muy sencilla.                                                                                 | -   Todas las opciones que se han usado en la configuración del gráfico están recogidas en el código, lo que hace que sea totalmente reproducible.                                                                                  |\n|                    |                                                                                                                                                         | -   La ubicación de las imágenes incrustadas es muy precisa, basándose en coordenadas X,Y cuyas unidades son las mismas del gráfico.                                                                                                |\n|                    | -   La exportación del gráfico es muy sencilla (botón derecho), y puede exportarse a cualquier formato (JPG, PNG, BITMAP, SVG)                          |                                                                                                                                                                                                                                     |\n+--------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| **Inconvenientes** | -   La preparación del gráfico a partir de una tabla dinámica es un poco engorrosa, debido a que las tablas dinámicas no ofrecen gráficos de dispersión | -   Para hacer un formato complejo, es necesario conocer bastante en detalle la codificación en R y en `ggplot`                                                                                                                     |\n|                    |                                                                                                                                                         | -   El posicionamiento de las imágenes es más engorroso; hay que detallar las coordenadas de cada imagen. El resultado definitivo sólo se consigue por ensayo y error, al no ser posible la edición visual de la que dispone Excel. |\n|                    | -   Las opciones utilizadas en la configuración no son explícitas, y no resulta fácil encontrar el detalle de cada opción de configuración utilizada.   |                                                                                                                                                                                                                                     |\n+--------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n|                    |                                                                                                                                                         |                                                                                                                                                                                                                                     |\n+--------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}